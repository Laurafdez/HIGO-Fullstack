{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar MyButton = function (_React$Component) {\n  _inherits(MyButton, _React$Component);\n\n  var _super = _createSuper(MyButton);\n\n  function MyButton() {\n    _classCallCheck(this, MyButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyButton, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(TouchableHighlight, {\n        onPress: this.props.onPress,\n        children: _jsx(Text, {\n          style: styles.text,\n          children: this.props.text\n        })\n      });\n    }\n  }]);\n\n  return MyButton;\n}(React.Component);\n\nexport { MyButton as default };\nvar styles = StyleSheet.create({\n  text: {\n    padding: 15,\n    margin: 10,\n    backgroundColor: 'white',\n    color: 'black',\n    borderWidth: 3,\n    borderColor: 'black',\n    fontSize: 25,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/alvaroserranodelalamo/Desktop/Teleco/backend_github/src/main/frontend/src/views/my_button.js"],"names":["React","MyButton","props","onPress","styles","text","Component","StyleSheet","create","padding","margin","backgroundColor","color","borderWidth","borderColor","fontSize","textAlign"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;IAGqBC,Q;;;;;;;;;;;;;WACjB,kBAAS;AACL,aACI,KAAC,kBAAD;AAAoB,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAAxC;AAAA,kBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA,oBAA2B,KAAKH,KAAL,CAAWG;AAAtC;AADJ,QADJ;AAKH;;;;EAPiCL,KAAK,CAACM,S;;SAAvBL,Q;AASrB,IAAMG,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,IAAI,EAAE;AACFI,IAAAA,OAAO,EAAE,EADP;AAEFC,IAAAA,MAAM,EAAE,EAFN;AAGFC,IAAAA,eAAe,EAAE,OAHf;AAIFC,IAAAA,KAAK,EAAE,OAJL;AAKFC,IAAAA,WAAW,EAAE,CALX;AAMFC,IAAAA,WAAW,EAAE,OANX;AAOFC,IAAAA,QAAQ,EAAE,EAPR;AAQFC,IAAAA,SAAS,EAAE;AART;AADuB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, TouchableHighlight } from 'react-native';\n\nexport default class MyButton extends React.Component {\n    render() {\n        return (\n            <TouchableHighlight onPress={this.props.onPress}>\n                <Text style={styles.text}>{this.props.text}</Text>\n            </TouchableHighlight>\n        )\n    }\n}\nconst styles = StyleSheet.create({\n    text: {\n        padding: 15,\n        margin: 10,\n        backgroundColor: 'white',\n        color: 'black',\n        borderWidth: 3,\n        borderColor: 'black',\n        fontSize: 25,\n        textAlign: 'center'\n    }\n})"]},"metadata":{},"sourceType":"module"}